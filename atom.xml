<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

   <title>Hankewins Blog</title>
   <link href="http://hankewins.com//atom.xml" rel="self" type="application/atom+xml"/>
   <link href="http://hankewins.com/" rel="alternate" type="text/html" />
   <updated>2014-07-16T09:54:05+08:00</updated>
   <id>http://hankewins.com/</id>
   <author>
     <name>Hankewins</name>
     <email>hankewins@gmail.com</email>
   </author>

   
   <entry>
     <title>不舍、起航、前进</title>
     <link href="http://hankewins.com//2014/05/30/we-are-move-to-new-place.html"/>
     <updated>2014-05-30T00:00:00+08:00</updated>
     <id>http://hankewins.com//2014/05/30/we-are-move-to-new-place</id>
     <content type="html"></content>
   </entry>
   
   <entry>
     <title>Jekyll中使用google-code-prettify语法高亮</title>
     <link href="http://hankewins.com//2014/02/19/jekyll-use-google-code-prettify.html"/>
     <updated>2014-02-19T00:00:00+08:00</updated>
     <id>http://hankewins.com//2014/02/19/jekyll-use-google-code-prettify</id>
     <content type="html">&lt;p&gt;之前使用wordpress时，一直都是用的SyntaxHIghlighter代码高亮的工具，虽然SyntaxHIghlighter的代码高亮显示的很漂亮，无奈加载太慢，且对markdown写的文章支持的还不是很好，只能舍弃了。现在用的这个是google-code-prettfy，效果也相当不错。最重要的是，非常小，加载速度比SyntaxHighlighter快得多，而且，可以直接使用markdown的语法去写代码。&lt;/p&gt;

&lt;h3&gt;准备工作&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://code.google.com/p/google-code-prettify/&quot;&gt;Google Code Prettify下载&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://google-code-prettify.googlecode.com/svn/trunk/styles/index.html&quot;&gt;主题库&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;第一步：引用prettify.css和prettify.js&lt;/h3&gt;

&lt;p&gt;将下载后的Prettify压缩文件解压到指定文件文件夹,将prettify.css和prettify.js文件放到项目文件夹下（例如：assets/theme/prettify目录）,然后打开需要引用的页面，添加如下代码：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;text language-text&quot; data-lang=&quot;text&quot;&gt;&amp;lt;link href=&amp;quot;/assets/themes/prettify/prettify.css&amp;quot; rel=&amp;quot;stylesheet&amp;quot; type=&amp;quot;text/css&amp;quot; media=&amp;quot;all&amp;quot;&amp;gt;
&amp;lt;script type=&amp;quot;text/javascript&amp;quot; src=&amp;quot;/assets/themes/prettify/prettify.js&amp;quot;&amp;gt;&amp;lt;/script&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;考虑到加载速度，最好将js写到文档末尾，body闭合标签之前，css写到头部&lt;/p&gt;

&lt;h3&gt;第二步：高亮代码块&lt;/h3&gt;

&lt;p&gt;添加以下代码，用于识别并高亮代码块&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;text language-text&quot; data-lang=&quot;text&quot;&gt;&amp;lt;script type=&amp;quot;text/javascript&amp;quot;&amp;gt;
    // 需要引入jQuery
    $(document).ready(function() {
        $(&amp;#39;pre&amp;#39;).addClass(&amp;#39;prettyprint linenums&amp;#39;).attr(&amp;#39;style&amp;#39;, &amp;#39;overflow:auto&amp;#39;);
        prettyPrint();
    });
&amp;lt;/script&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;第三步：显示全部行号&lt;/h3&gt;

&lt;p&gt;默认prettify只显示行号5,10,15...,可以给&lt;code&gt;pre&lt;/code&gt;标签下的li设置以下样式&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;text language-text&quot; data-lang=&quot;text&quot;&gt;pre li{ list-style-type: decimal; }
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;第四步：选择喜欢的主题样式&lt;/h3&gt;

&lt;p&gt;打开&lt;a href=&quot;http://google-code-prettify.googlecode.com/svn/trunk/styles/index.html&quot;&gt;主题库&lt;/a&gt;选择喜欢的主题，并复制或者下载主题样式文件，替换默认主题样式文件（prettify.css）,本文使用的主题是Desert&lt;/p&gt;

&lt;h3&gt;第五步：完成&lt;/h3&gt;

&lt;p&gt;到此Google Code Prettify已可以正常使用了，现在可以直接用markdown的前置4空格来写代码了。&lt;/p&gt;

&lt;p&gt;另外，如果博客中的代码块存在滚动条可以通过如下代码实现自动换行&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;text language-text&quot; data-lang=&quot;text&quot;&gt;white-space:pre;white-space:pre-wrap;word-break:break-all;word-wrap:break-word;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;如在操作过程中存在任何问题，请给我留言，谢谢！&lt;/p&gt;
</content>
   </entry>
   
   <entry>
     <title>解决HTML5移动开发中边框显示2px</title>
     <link href="http://hankewins.com//2014/02/18/how-to-development-a-navtive-app-for-html5.html"/>
     <updated>2014-02-18T00:00:00+08:00</updated>
     <id>http://hankewins.com//2014/02/18/how-to-development-a-navtive-app-for-html5</id>
     <content type="html">&lt;p&gt;让我们一起来回顾一下，HTML5移动开发过程中遇到的一些问题，总结起来也就以下几个方面：&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;图片适配（图片大小、图片质量）&lt;/li&gt;
&lt;li&gt;PSD设计稿与页面大小的适配&lt;/li&gt;
&lt;li&gt;页面中元素的边框显示双倍（不像Andorid原生开发中显示的非常清晰）&lt;/li&gt;
&lt;li&gt;字体大小的适配&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;由于项目的特殊性，需要HTML5应用更加的贴近Andoird原生应用，现需要解决HTML５页面中边框显示2px的问题。因此本篇文章主要是针对页面中元素边框显示成2px的问题的探讨，如对其他几个问题感兴趣可以查看我之前分享的PPT&lt;a href=&quot;https://speakerdeck.com/hankewins/yi-dong-qian-duan-kai-fa-na-xie-shi&quot;&gt;《移动前端开发那些事》&lt;/a&gt;。&lt;/p&gt;

&lt;p&gt;引起HTML5移动端适配的主要原因是因为移动端设备存多分辨率、多尺寸的问题，针对元素边框显示成2px(实际设置的是1px),主要是移动端设备的DPI引起,那么我们可以通过几下方式解决此问题：&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;设置META属性中viewport的initial-scale=0.5&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;text language-text&quot; data-lang=&quot;text&quot;&gt;&amp;lt;meta name=&amp;quot;viewport&amp;quot; content=&amp;quot;width=device-width, initial-scale=0.5 minimum-scale=0.5, maximum-scale=0.5, user-scalable=no&amp;quot;/&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;通过CSS3 box-shadow 设置内阴影&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;text language-text&quot; data-lang=&quot;text&quot;&gt;box-shadow:inset 0 0 1px #000;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;通过CSS3背景渐变和背景大小设置&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;text language-text&quot; data-lang=&quot;text&quot;&gt;&amp;lt;style type=&amp;quot;text/css&amp;quot;&amp;gt;
    .border1px-b,.border1px-tb {
        color:red;
        border:1px #c8c7cc solid;
        background-image:none
    }

    .border1px-b {
        border-width:0 0 1px
    }

    .border1px-tb {
        border-width:1px 0
    }

    @media screen and (-webkit-min-device-pixel-ratio:2.0) {
        .border1px-b {
            background:-webkit-gradient(linear,left top,left bottom,color-stop(.5,transparent),color-stop(.5,#c8c7cc),to(#c8c7cc)) left bottom repeat-x;
        }

        .border1px-tb {
            background:-webkit-gradient(linear,left bottom,left top,color-stop(.5,transparent),color-stop(.5,#c8c7cc),to(#c8c7cc)) left top repeat-x,-webkit-gradient(linear,left top,left bottom,color-stop(.5,transparent),color-stop(.5,#c8c7cc),to(#c8c7cc)) left bottom repeat-x;
        }

        .border1px-b,.border1px-tb {
            background-size:100% 1px;
            -wekit-background-size:100% 1px;
            border:0 none;
        }
    }
&amp;lt;/style&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;参考文章&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://weizhifeng.net/viewports.html&quot;&gt;两个viewport的故事&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.phpstudy.net/css3/&quot;&gt;CSS3参考手册&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://ecd.tencent.com/css3/guide.html&quot;&gt;CSS3动画手册&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
   </entry>
   
   <entry>
     <title>2014年新金立新征程</title>
     <link href="http://hankewins.com//2014/01/26/gionee-group-annual-party.html"/>
     <updated>2014-01-26T00:00:00+08:00</updated>
     <id>http://hankewins.com//2014/01/26/gionee-group-annual-party</id>
     <content type="html">&lt;p&gt;&lt;a href=&quot;http://www.elife.com/thread-44841-1-1.html&quot;&gt;&lt;img src=&quot;/pic/20140126001.jpg&quot; alt=&quot;新金立、新征程&quot;&gt;&lt;/a&gt;
2014年金立集团新年联欢晚会，金立人齐聚一起。新金立、新征程！&lt;/p&gt;

&lt;p&gt;今年的年会如以往不同，处处都透露出公司的改革和创新，从高层的新动态，从制度的规范健全，从对研发的大力投入，每一个细节，每一个创新，每一次进步，都直接映射出金立战略，
创新的金立、国际的金立、跨界的金立。&lt;/p&gt;

&lt;p&gt;让我们一起来看看，新金立，新征程，不一样的视界，不一样的理念！&lt;/p&gt;

&lt;p&gt;2014年金立集团新年联欢晚会,新金立、新征程&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.elife.com/thread-44841-1-1.html&quot;&gt;&lt;img src=&quot;/pic/20140126002.jpg&quot; alt=&quot;新金立、新征程&quot;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;高层领导新形象&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.elife.com/thread-44841-1-1.html&quot;&gt;&lt;img src=&quot;/pic/20140126003.jpg&quot; alt=&quot;金立高层领导新形象&quot;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;高层领导新形象（刘董）&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.elife.com/thread-44841-1-1.html&quot;&gt;&lt;img src=&quot;/pic/20140126004.jpg&quot; alt=&quot;金立高层领导新形象&quot;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;高层领导新形象（卢总）&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.elife.com/thread-44841-1-1.html&quot;&gt;&lt;img src=&quot;/pic/20140126005.jpg&quot; alt=&quot;金立高层领导新形象&quot;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;参加晚集团年会回来都晚上12点多了，但本次年会却收获大大的，高层的行为举止、积极的心态、不一样的形象，
简单的一句话来概括现场所有的感受和本次收获的真谛——心有所归、力归所用，眼观所属，认清自我，让心态决定选择，让选择决定人生！&lt;/p&gt;
</content>
   </entry>
   
   <entry>
     <title>代码发布流程的一些探讨</title>
     <link href="http://hankewins.com//2014/01/24/how-to-release-your-code-to-online.html"/>
     <updated>2014-01-24T00:00:00+08:00</updated>
     <id>http://hankewins.com//2014/01/24/how-to-release-your-code-to-online</id>
     <content type="html">&lt;p&gt;今天组织了一次&lt;a href=&quot;http://hankewins.com/reveal.html&quot;&gt;代码发布流程研讨会&lt;/a&gt;，指在讨论现有代码发布流程的一些优缺点，通过收集同学们已知的代码发布流程，进行总结并优化现有的代码发布流程。&lt;/p&gt;

&lt;h2&gt;目前我们代码发布流程是怎么样的？&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;开发完成、测试完成&lt;/li&gt;
&lt;li&gt;前端打包静态文件包&lt;/li&gt;
&lt;li&gt;后端打包后台文件包（同时修改后台版本号）&lt;/li&gt;
&lt;li&gt;后台开发汇总前后端文件包&lt;/li&gt;
&lt;li&gt;邮件运维及相关人员&lt;/li&gt;
&lt;li&gt;运维整理后，开始更新&lt;/li&gt;
&lt;li&gt;先更新静态文件包&lt;/li&gt;
&lt;li&gt;再更新后台文件包&lt;/li&gt;
&lt;li&gt;最后更新前台文件包&lt;/li&gt;
&lt;li&gt;中间任一流程出问题，重新更新&lt;/li&gt;
&lt;li&gt;如更新问题来源于程序，则回滚&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;优点：代码发布完成有运维人员控制，对代码安全以及线上正常运营起到了一定的保障作用。&lt;br&gt;
缺点：人工手动操作过多、发布流程时间过长、更新依赖性过高、解决线上问题响应过慢。&lt;/p&gt;

&lt;p&gt;通过目前代码发布流程的缺点，我们可以看到由于人工手动操作过多，直接导致程序包不完整的概率，从源头就增加了线上环境不稳定因素，从而引起恶性循环。
另一方面由于采用CDN技术，静态文件分离，如需更新静态文件必须走发布流程（静态文件更新很频繁），直接导致更新时间过长，对线上问题的响应过慢。&lt;/p&gt;

&lt;h2&gt;IT、通信等企业的发布流程？&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;电商企业（阿里、淘宝、麦包包）&lt;/li&gt;
&lt;li&gt;传统通信（中兴、华为）&lt;/li&gt;
&lt;li&gt;IT互联网（百度、腾讯、网易）&lt;/li&gt;
&lt;li&gt;中小企业、小团队&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;电商企业：根据安全等级分为主业务、子业务。&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;text language-text&quot; data-lang=&quot;text&quot;&gt;主业务——开发完成、测试完成 -&amp;gt; 代码审查 -&amp;gt; 安全审查 -&amp;gt; 技术VP审批 -&amp;gt; 运维团队（灰度发布） -&amp;gt; 运维团队(发布)
子业务——开发完成、测试完成 -&amp;gt; 代码审查 -&amp;gt; 发布平台
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;传统通信：根据业务范围分为通信业务、互联网业务&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;text language-text&quot; data-lang=&quot;text&quot;&gt;通信业务——开发完成、测试完成 -&amp;gt; 各应用团队提审　-&amp;gt; 联合审查 -&amp;gt; 测试、调试 -&amp;gt; 生产流程
互联网业务——开发完成、测试完成 -&amp;gt; 运维团队（预发布）-&amp;gt; 测试通过 -&amp;gt; 技术VP审批 -&amp;gt; 运维团队（发布）
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;IT互联网：  根据业务等级分为主业务、子业务。&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;text language-text&quot; data-lang=&quot;text&quot;&gt;主业务——开发完成、测试完成 -&amp;gt; 代码审查 -&amp;gt; 安全审查 -&amp;gt; 技术VP审批 -&amp;gt; 运维团队（灰度发布） -&amp;gt; 运维团队(发布)
子业务——开发完成、测试完成 -&amp;gt; 发布平台(开发可直接操作)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;中小企业、小团队：根据需求发布&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;text language-text&quot; data-lang=&quot;text&quot;&gt;发布流程(1)：开发完成（自测完成）-&amp;gt; 开发上传代码到服务器
发布流程(2)：开发完成（自测完成）-&amp;gt; 开发上传DWZ包、或者其他文件包 -&amp;gt; 运维人员（手动发布）
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;以上只是根据内部小伙伴的工作情况，初步的进行总结各企业的发布流程，与实际发布流程可能有较大的出入。（实际发布流程受公司技术管理、公司服务器架构、
公司规模、公司业务方向、公司战略等各因素的影响）&lt;/p&gt;

&lt;p&gt;根据我们的需求及现有环境，我们缺少灰度发布（预发布）和发布平台，目的是减少手动操作以及提高应对线上业务的响应能力。&lt;/p&gt;

&lt;p&gt;本文章只是粗略的介绍了发布流程，如需了解详细的发布流程，可以给我留言，谢谢！&lt;/p&gt;

&lt;p&gt;最后，如果你有好的发布流程优化方案，希望你能给我们一些帮助！&lt;/p&gt;
</content>
   </entry>
   
   <entry>
     <title>从 wordpress 搬迁到 github pages</title>
     <link href="http://hankewins.com//2014/01/22/wordpress-blog-to-github-pages.html"/>
     <updated>2014-01-22T00:00:00+08:00</updated>
     <id>http://hankewins.com//2014/01/22/wordpress-blog-to-github-pages</id>
     <content type="html">&lt;p&gt;一直在寻求快速发表文章的工具，于是不停的在尝试。期间尝试过win7和Ubuntu下各种Ｍarkdown编辑预览工具，
甚至使用开发工具ST2(Sublime text 2)装Ｍarkdown插件来更新博客，各种尝试，各种折腾。也许是因为之前对动态站点的理解，
导致思想上一直认为 —— WordPress 或者 emlog 等是最好的博客系统没有之一的原故。&lt;/p&gt;

&lt;p&gt;自从使用&lt;a href=&quot;http://lab.lepture.com/nico/zh/&quot;&gt;nico&lt;/a&gt;生成了&lt;a href=&quot;http://vkdemo.sinaapp.com/icatjs/index.html&quot;&gt;ICAT&lt;/a&gt;文档后，
有一种冲动想立刻在上面建立起我的博客副本，感觉挺不错的。&lt;/p&gt;

&lt;p&gt;昨天打算在Ｗordpress的编辑器里写了一篇年会抽奖系统(nodejs+mongodb)的文章，由于涉及到很多的代码片段，有的需要格式化，有的只是要使用code标签。
当我在编辑模式和HTML源码编辑模式下各种抓狂之后，决定放弃ＷordPress，使用github。这样我就可以在我喜欢的编辑器里，使用我熟悉的markdown语法来写博客。&lt;/p&gt;

&lt;p&gt;迁移的步骤如下：&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;先阅读阮一峰的一篇很赞的文章&lt;a href=&quot;http://www.ruanyifeng.com/blog/2012/08/blogging_with_jekyll.html&quot;&gt;搭建一个免费的，无限流量的Blog----github Pages和Jekyll入门&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;备份wordpress数据库，并转换日志为.md文件&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;下载一份 jekyll 模板 (这里感谢&lt;a href=&quot;http://www.zhanxin.info/&quot;&gt;展新&lt;/a&gt;的模块&lt;a href=&quot;https://github.com/pizn/kunka&quot;&gt;kunka&lt;/a&gt;)&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;将第二步中的所有.md文件放到_posts文件夹中（手动处理好.md文件中非法的字符和标签）&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;模块 kunka 中支持两种评论插件（disqus 和多说），进行简单配置即可直接使用。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;将本地文件提交到github&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;迁移的注意点如下：&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;github pages 分为两大类，一类是以根站点（github user or organization site, e.g. username.github.io), 
另一类是　项目站点（project site, e.g. username.github.io/projectname),请参考&lt;a href=&quot;http://pages.github.com&quot;&gt;官方文档&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;域名域名(顶级域名绑定——只需要把顶级域名的Ａ记录指向到204.232.175.78，
非顶级域名绑定——只需要把非顶级域名绑定的cname的DNS解析指向到username.github.com（请将username换成你的用户名）)，查看&lt;a href=&quot;https://help.github.com/articles/setting-up-a-custom-domain-with-pages&quot;&gt;官方文档&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;关于 jekyll 的相关操作，可以查看&lt;a href=&quot;http://jekyllrb.com/docs/home/&quot;&gt;官方文档&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;对以上有任何的疑问都可以&lt;a href=&quot;http://hankewins.com/about.html&quot;&gt;联系我&lt;/a&gt;或者给我留言，谢谢！&lt;/p&gt;

&lt;p&gt;最后，整个博客都是开源，博客中的样式、模板都可以直接使用，但文章内容和图片内容保留版权，未经允许禁止使用！&lt;/p&gt;
</content>
   </entry>
   
   <entry>
     <title>金立移动互联网第三产品中心年度盛会</title>
     <link href="http://hankewins.com//2014/01/18/third-product-center-annual-party.html"/>
     <updated>2014-01-18T00:00:00+08:00</updated>
     <id>http://hankewins.com//2014/01/18/third-product-center-annual-party</id>
     <content type="html">&lt;p&gt;从移动互联网运营部到移动互联网第三产品中心的转变，标志着我们目前各产品线的良性成长。从个位数迅速发展到百位数、从第一个迭代版本到第几十个的迭代版本、从单一结构发展到
多元化结构、从年会时３桌的人数迅速发展到上10桌的人数、奖项从单一到多元化和人性化的分布。2013年是成长的一年，也是快乐的一年，因为和你们在一起。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;2014 year department party, Ｗe are here in the sand beach party，where are you ?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;sand beach party&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/pic/20140118000.jpg&quot; alt=&quot;sand beach party&quot;&gt;&lt;/p&gt;

&lt;p&gt;现场盛会&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/pic/20140118010.jpg&quot; alt=&quot;现场盛会&quot;&gt;&lt;/p&gt;

&lt;p&gt;我们的掌柜（Boss）&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/pic/20140118011.jpg&quot; alt=&quot;我们的掌柜&quot;&gt;&lt;/p&gt;

&lt;p&gt;金立移动互联网运营部　各位大佬们&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/pic/20140118001.jpg&quot; alt=&quot;金立移动互联网运营部　各位大佬们&quot;&gt;&lt;/p&gt;

&lt;p&gt;青春活力的萌妹纸&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/pic/20140118002.jpg&quot; alt=&quot;青春活力的萌妹纸&quot;&gt;&lt;/p&gt;

&lt;p&gt;卡哇伊的妹纸&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/pic/20140118003.jpg&quot; alt=&quot;卡哇伊的妹纸&quot;&gt;&lt;/p&gt;

&lt;p&gt;艺样的演技，人气之王&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/pic/20140118004.jpg&quot; alt=&quot;艺样的演技，人气之王&quot;&gt;&lt;/p&gt;

&lt;p&gt;各种舞蹈，各种帅锅美女&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/pic/20140118005.jpg&quot; alt=&quot;各种舞蹈，各种帅锅美女&quot;&gt;&lt;/p&gt;

&lt;p&gt;有了弓箭10,再也不用担心打羽毛球啦&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/pic/20140118006.jpg&quot; alt=&quot;有了弓箭10,再也不用担心打羽毛球啦&quot;&gt;&lt;/p&gt;

&lt;p&gt;非诚勿扰，这在等你&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/pic/20140118007.jpg&quot; alt=&quot;非诚勿扰，这在等你&quot;&gt;&lt;/p&gt;

&lt;p&gt;法海大闹许仙&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/pic/20140118008.jpg&quot; alt=&quot;法海大闹许仙&quot;&gt;&lt;/p&gt;

&lt;p&gt;比翼双飞，让我们飞的很高&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/pic/20140118009.jpg&quot; alt=&quot;比翼双飞，让我们飞的很高&quot;&gt;&lt;/p&gt;

&lt;p&gt;海边盛会，火爆的现场，平静的夜晚，美妙的海上日出，享受生活，享受每好的时刻。&lt;/p&gt;

&lt;p&gt;2013年过去了，2014我们要更加的努力！&lt;/p&gt;
</content>
   </entry>
   
   <entry>
     <title>2013年终总结</title>
     <link href="http://hankewins.com//2013/12/28/2013-year.html"/>
     <updated>2013-12-28T00:00:00+08:00</updated>
     <id>http://hankewins.com//2013/12/28/2013-year</id>
     <content type="html">&lt;p&gt;2013年就要过去了，像往年一样总结一下过去的一年我的变化。&lt;/p&gt;

&lt;h1&gt;生活&lt;/h1&gt;

&lt;p&gt;2013年，我的本命年，生活和感情在我的人生中也开了一个小玩笑，让我心情低落过、脾气暴躁过、在游戏中颓废过，但我的认知从未游离过，我了解我自己，不快乐的都已经过去了，重新认识自己，做好自己，为了明天，为了自己。&lt;/p&gt;

&lt;p&gt;美好的瞬间，从现在开始， Let&amp;#39;s go!&lt;/p&gt;

&lt;p&gt;在深圳第一次陪我家的“执子闲人”过了三个生日，送去了一份生日礼物 —— ipad 4&lt;/p&gt;

&lt;p&gt;在深圳第一次和“执子闲人”去东部华侨城——二日游，也许去的人太多，没有想像中的那么好玩，但华侨城的景色和设计的确不错。&lt;/p&gt;

&lt;p&gt;在深圳第一次和“执子闲人”订了一个KTV，傻傻的吃喝玩唱3小时。&lt;/p&gt;

&lt;p&gt;在深圳第一次和“执子闲人”一起陪着侄女和外甥女简单的了解深圳。&lt;/p&gt;

&lt;p&gt;今年夏天再次去清远二日游（ZTE 第一次、GiONEE移动互联网 第二次、GiONEE移动互联网战略第三次），但是和以往的心情却不一样，“清远鸡”味道着实不错，但我再也不打算去了，如果你下次去，记得帮忙带两只咯。&lt;/p&gt;

&lt;p&gt;仔细想想今年去的地方也是挺多的，拿着单反、骑着山地车、望着大海，大声说“Hong Kong am here&amp;quot;!&lt;/p&gt;

&lt;h1&gt;工作&lt;/h1&gt;

&lt;p&gt;年初的规划，一个一个的顺利完成。（深入了解了组内JS框架的架构和设计原理以及使用场景等，率先在组内切换工作环境到Linux，创建了基于Compass的LookitUI（基于前端的UI库），深入的了解并使用backbone进行开发。）&lt;/p&gt;

&lt;p&gt;在产品线成功的担任XX项目Master，离自己的职业规划又迈近了一小步！&lt;/p&gt;

&lt;p&gt;今年我做了大小十几次的演讲，参加了每一期的头脑风暴以及技术分享会。其实演讲也是一种需要大量练习才能买得的技能，我现在也只是做到了最基础：弄清楚目标听众是什么，吸引他们的注意，表达我的想法。最近也有去看了很多大牛的演讲和分享，我自愧太不如了，以后还得多加练习，积极主动。&lt;/p&gt;

&lt;p&gt;今年我成功的创建了Nodejs交流群（QQ群号：322794303），欢迎你的加入。成功的用Nodejs开发打包工具、CMS后台、年会抽奖系统。&lt;/p&gt;

&lt;p&gt;技术学习方面，粗而广的学了一些东西， Nodejs、MongoDB、Liunx、Andorid、Backbonejs、Seajs、Rangularjs、响应式流程等。我学技术的原则是熟练度可以不高，但原理和模式一定要理解。&lt;/p&gt;

&lt;p&gt;读书方面，粗略的看了这几本书， Nodejs 、MongoDB、JavascripMVC、淘宝技术这十年等，但对技术文章的阅读上有了很大的提高，同时对提高自身修养方面的关注度也近一步提高了。&lt;/p&gt;

&lt;p&gt;最后的最后，跟我们家的“执子闲人”恋爱四年了，回想过去我们也遇到过很多的艰难，最终都挺过来了，感谢在我最困惑的时候，有你的陪伴。我相信，以后无论发生什么，我们都能一路走下去。&lt;/p&gt;
</content>
   </entry>
   
   <entry>
     <title>移动开发总结（转）</title>
     <link href="http://hankewins.com//2013/11/20/html5-and-css3-for-mobile-development.html"/>
     <updated>2013-11-20T00:00:00+08:00</updated>
     <id>http://hankewins.com//2013/11/20/html5-and-css3-for-mobile-development</id>
     <content type="html">&lt;p&gt;1、低版本Android下input有CSS3动画会让输入框失去焦点，解决办法是低版本Android下去掉所有CSS3动画。
.ua-ios .ipt{-webkit-transition:all .5s;-moz-transition:all .5s;-o-transition:all .5s;-ms-transition:all .5s;transition:all .5s}
.ua-oldAndroid .ipt {-webkit-transition:none;-moz-transition:none;-o-transition:none;-ms-transition:none;transition:none;}&lt;/p&gt;

&lt;p&gt;2、-webkit-user-modify: read-write-plaintext-only; 作用是去掉输入框聚焦时候的白色背景 ；
但是这里有一个问题，Android4.0以上的系统，当软键盘激活出来的时候read-write-plaintext-only的输入框不会居中在屏幕中间，这里需要根据实际情况进行取舍。&lt;/p&gt;

&lt;p&gt;3、translate3d可以让IOS启用硬件渲染，动画效果会更加流畅，基本上能解决所有抖动；但在Android下带来新的问题——只要页面里面有节点拥有transform属性，输入框都会不正常（聚焦不正常、输入时上下抖动等），此外还会导致节点渲染变慢（如点击出下啦菜单渲染缓慢）。
再次强调CSS3的动画、投影在Android下尽量避免。
.ua-ios .mail-list .list-item,
.ua-ios .menu-item,
.ua-ios .menu-split{
    -webkit-transform: translate3d(0,0,0);
    transform: translate3d(0,0,0);
}&lt;/p&gt;

&lt;p&gt;4、Android 2.3.7 下不加透明border，会导致溢出隐藏失效。
.atts .att-preview{overflow:hidden;width:50px;height:50px;border:1px solid transparent;}&lt;/p&gt;

&lt;p&gt;5、IOS下fixed定位（比如框架顶部提示信息），当键盘收起的时候会有残影：fixed元素不会随着键盘收起而移动到页面顶部，而是保持在页面中间，需要hack改成绝对定位。
.frame-tips{position:fixed;z-index:30;left:0;top:0}
.ua-ios .frame-tips{position: absolute}&lt;/p&gt;

&lt;p&gt;6、在iPad1等低版ios下，opacity和其他属性一起改变，会导致transition中重复执行三次，所以要么只改变opacity实现淡入淡出，要么只改变非opacity属性。
.mRead-reply .btn{position:absolute;right:0;top:0;/&lt;em&gt;opacity:0;&lt;/em&gt;/overflow:hidden;display:block;width:64px}&lt;/p&gt;

&lt;p&gt;7、在Android4.1下，如果textarea聚焦的时候，其高度或者其兄弟节点的高度产生变化，那么textarea就会被软键盘挡住而不会自动调整位置，这里需要去掉所有效果，默认显示输入框展开状态。所以Android下尽量不要在textarea和input上做动画。&lt;/p&gt;

&lt;p&gt;8、Android下div的高度设置成100%，同时设置其overflow:auto;那么滚动条就会出现在这个div上面。
这个时候会出现抖动，所以建议Android下页面的滚动能且只能出现在body节点上面！&lt;/p&gt;

&lt;p&gt;原文章地址：http://ntesmailfetc.blog.163.com/blog/static/20628706120139184457401/&lt;/p&gt;
</content>
   </entry>
   
   <entry>
     <title>阿里前端的困局与突围(转)</title>
     <link href="http://hankewins.com//2013/10/23/is-time-to-think-about-frontend-future.html"/>
     <updated>2013-10-23T00:00:00+08:00</updated>
     <id>http://hankewins.com//2013/10/23/is-time-to-think-about-frontend-future</id>
     <content type="html">&lt;p&gt;最近发了两条微博：
想起克军的一句话：前端研究，研究个屁~ 的确如此呀。补充下联：前端设计，设计个屁~
前端目前最大的困境是，如 HTML 一样，无论你承不承认，市场上并不太需要 HTML 高手。
微博上的回复大部分歪楼了。上面两句话乍看有点激进，却是我的真实想法。&lt;/p&gt;

&lt;p&gt;背后是一个问题：&lt;/p&gt;

&lt;p&gt;前端的价值究竟是什么？未来应该如何发展？&lt;/p&gt;

&lt;h2&gt;前端的价值&lt;/h2&gt;

&lt;p&gt;如果你刚入行，或者从事专职前端工作未满 3 年，请忽略上面这个问题，并且尽量不要再往下看了。&lt;/p&gt;

&lt;p&gt;我知道你会忍不住往下看，那就看吧。负能量有时也是正能量。真实面对所做的事，如实面对自己的真心，这是迟早的。有过痛，才真正懂得乐。&lt;/p&gt;

&lt;p&gt;特别注意，下面说的前端，都是阿里的前端，其他公司切勿对号入座，每个公司的情况都不同。每个公司，前端的定位也会有差异。&lt;/p&gt;

&lt;p&gt;阿里的前端，目前主要分两种：一种在 UX / UED 部门，另一种在技术部门，所做的事大同小异，都是负责界面交互层的开发。上游是 PD、交互、视觉等，下游是后端开发人员、测试等。技能主要是 HTML、CSS、JavaScript，有些前端团队比如支付宝还直接负责 Velocity 等模板层的开发。这是阿里目前前端的现状。&lt;/p&gt;

&lt;p&gt;前端是后端数据的第一消费者，也是最贴近用户的程序员。&lt;/p&gt;

&lt;p&gt;一切看起来很美。&lt;/p&gt;

&lt;p&gt;前端的价值在哪呢？很多人会回答：&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;实现界面交互。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;提升用户体验。
　　
第一点是前端的本职工作，也是前端岗位存在的原因。第二点也不多说，前端做得好，对用户体验是有益的。&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;让人纠结的，是前端有价值，可是，这价值真的很重要吗？真的值得做为一个职业投入一辈子吗？
　　
做技术的，可能都会有类似纠结。但传统技术，纠结相对少点。比如搞数据库的，有一堆牛人榜样，搞网络、安全等等的，也是如此。这个现实的背后，是因为：&lt;/p&gt;

&lt;p&gt;这批传统技术的背后，无论是数据库底层优化，还是网络优化、安全防范等等，做得好，对业务都能直接产生影响，比如大幅度降低硬件成本等等。 价值是直接的，可见的，不太会被质疑。&lt;/p&gt;

&lt;p&gt;然而前端的价值，没有人会直接否认，但看得明白的，都知道：
淘宝的核心用户体验，并非是 UI 层面带来的，而是 C2C 的模式，是同等品质下商品的价格，还有支付宝的便捷等等。前端的确很重要，但真的，也就那么着。比如京东，很多交互细节做得其实不咋的，但京东靠着靠谱的物流、货到付款等方式提升了整体购物体验。对阿里来说，用户体验非常非常重要，但前端在用户体验层面能做的其实很少很少。&lt;/p&gt;

&lt;h3&gt;一个事实：&lt;/h3&gt;

&lt;p&gt;把国内大部分公司的 UX 部门解散掉，也不会太影响产品的体验。在国内，UX 主要还是起到美工的作用，虽然我不想承认。&lt;/p&gt;

&lt;p&gt;前端依旧是美工，而且仅仅是实现工。&lt;/p&gt;

&lt;p&gt;在阿里，我们不得不承认一个事实：&lt;strong&gt;前端的确有价值，但放在全局来看，前端产生的价值并非核心价值。&lt;/strong&gt; 在阿里，虽然前端的工作已经不可或缺，但对大公司而言，不可或缺的岗位多了去呢，不可或缺不代表有核心价值，我就不说了。&lt;/p&gt;

&lt;h2&gt;前端的未来发展&lt;/h2&gt;

&lt;p&gt;前端，往后是技术，往前是体验。我的理解，前端的未来发展，有两个方向：&lt;/p&gt;

&lt;p&gt;前后端体系的融合，技术平台化。 范例是 Google、Facebook 等公司的技术体系，不细分前后端，都是 Web Developer，在整套技术平台上，Developer 都可以从后到前高效开发。技术平台本身由 Engineer 维护，有各个领域的高手，包括前端的。&lt;/p&gt;

&lt;p&gt;前端技术带来的体验革新，成为某些产品的核心竞争力。 典型的比如 Path，国外有很多创新型项目，体验是核心竞争力之一。在这类产品中， 前端带来的用户体验很关键。&lt;/p&gt;

&lt;p&gt;然而，上面两个方向，在阿里的现状下，困难重重：&lt;/p&gt;

&lt;p&gt;技术平台化之路很难。 阿里现有的技术体系，前端只是薄薄的一层，要靠这薄薄的一层，来渗透甚至改革现有前后端开发模式，非常困难。支付宝算是走在前面，已经摸索了一年多，但越来越觉得，前端的绝大部分问题，其实都需要后端才能解决。去跨团队推动也可以，因为难，所以前行也挺有挑战挺有意义。可是，更悲催的事实是，技术平台化，前后端开发模式的融合，目前来看，并不是阿里的痛点，还没有到这一步，没这个强烈需求。需求不强烈，意味着缺了“天时”。很希望我的想法是错的。前后端的技术平台化之路，还有一个很现实的问题是，马云留下的隐患：平凡的人去做非凡的事。虽然现在有意不提这句话了。这句话很伤人，特别是技术人员，然而事实就是事实。即便技术平台能建成，在平台之上，阿里现有的开发人员，无论是前端还是后端，很多人可能还欠缺了不少能力。Facebook、Google 等玩起来，有个重要因素是精英文化。这话题不多说。现实的残酷，虽然也有方法是改变。&lt;/p&gt;

&lt;p&gt;体验创新之路也非常难。 在淘系可能相对好点，在支付宝，前几年首要的问题是安全、稳定，接下来几年之内，依旧是安全、稳定。创新受产品形态的影响非常大，没有一个好的产品，妄谈创新。可以有不少微创新，可以有很多小而美，但目前都触不到痛点，隔靴搔痒。真正承担阿里用户体验的，是 CDN 团队、是数据库团队、是 PD、是运营、是大安全…… 继续希望我是错的。&lt;/p&gt;

&lt;p&gt;以上两个方向，虽然困难重重，但在一些新领域，却充满机会与希望：&lt;/p&gt;

&lt;p&gt;无线领域。 未来是属于无线的，这话说到心坎上。目前阿里的无线才起步，起步意味着百废待兴。无论是前后端的技术体系，还是产品的体验创新，在无线领域，前端的机遇与挑战都很多。并且其价值，有可能变成核心价值。这一点，希望我的判断是对的。（编者注：在阿里“移动”叫“无线”）&lt;/p&gt;

&lt;p&gt;Node.js 领域。严格来说是 JavaScript 程序员的新舞台。通过 Node，前端程序员可以摇身一变，变成传统程序员。数据库、网络、业务架构等等技术核心领域，都可以通过 JavaScript 来达成。Node 社区是迷人的。同样，希望我的判断是对的。&lt;/p&gt;

&lt;p&gt;上面的分类有点混乱，下面继续乱谈：&lt;/p&gt;

&lt;p&gt;创业。 在很多产品中，前端虽然很难产生核心价值，但在有竞争的地方，附属价值经常会成为核心竞争力。比如出去创业，如何在大量同类产品中脱颖而出，前端界面层的实现非常关键。可是，无论是淘宝，还是支付宝等，目前都已经过了初期创业期。有时真希望，易趣如果还强大着该有多好。&lt;/p&gt;

&lt;p&gt;转行。 的确，没必要因为懂 JavaScript，就一辈子做前端。没必要限定自己的发展，可以做 2-3 年前端，然后再去做 2-3 年开发，还年轻的话，可以继续尝试各种岗位，说不定，10年后，就变 CTO 了。&lt;/p&gt;

&lt;p&gt;从人的一生来看，前端只是一段很小的旅途。它能带给你我们的已经不少，舍弃惯性，脱离舒适区，长远来看才能走得更远。放弃有时也是坚持，重要的是你心中的梦是什么。&lt;/p&gt;

&lt;h2&gt;感悟与坚持&lt;/h2&gt;

&lt;p&gt;纯技术上，前端目前的很多发展，只是在满足业务，并没有真正对业务带来“从无到有、促进变革”的变化。从公司的角度讲，并不需要那么多前端牛人。这是我那条说 HTML 高手是屠龙术的微博的含义。&lt;/p&gt;

&lt;p&gt;另一个角度上，前端技术这些年的变化，无论是 YUI 的发展、还是最近两三年兴起来的模块化开发理念、以及 Node.js 带来的前端工具变革、还有 Backbone 等类库背后的 MVX 的发展，这些都切实推动着前端往前发展，虽然很慢很慢，虽然短时间内很难直接影响业务价值，但我相信，这类工作的价值，也很大。&lt;/p&gt;

&lt;p&gt;一类是直接促进业务发展，一类是缓慢带动人员的成长。这两类工作，都非常有价值。一个着力于现在，一个发力于未来。&lt;/p&gt;

&lt;p&gt;看起来，路都很清楚。然而我们都是人不是神。最后以一段人与人之间的对话来结束这篇充满负能量的文章：&lt;/p&gt;

&lt;p&gt;章小新：有一个现实是，如果在这块上长时间的价值不被认可，那很有可能真正产出的价值没有我们想想象的大，是否是我们自己深限其中？ 有时虽然不想往这方面想，但又是不得不仔细深思的问题。&lt;/p&gt;

&lt;p&gt;玉伯：毕竟我们都是人，要坦诚面对自己的真心，包括贪欲。比如一个事，如果做了 5 年，依旧得不到直接认可，也没更多物质上奖励，我估计你也很难做下去了，或者就是打着酱油，干着其他有意思的事情去了。&lt;/p&gt;

&lt;p&gt;章小新：哈，今天的话题的确是沉了点，今天上午还和同事们讨论过~~~ 先认清自己，再从容微笑去面对。&lt;/p&gt;

&lt;p&gt;玉伯：从容微笑谈何容易。从容微笑的一个前提是，认清了自己，找到了今后要走的方向，知道接下来该怎么走下去。&lt;/p&gt;

&lt;p&gt;李牧：这么说好像我有多么淡定一样。。其实没有了。会很计较，但是现实面前了。&lt;/p&gt;

&lt;p&gt;玉伯：从容不是有希望，也不是在路上，而是自己喜欢自己做的事情。又变鸡汤了，不过发现很多鸡汤越来越有道理，得真心去信。真正的认可是自己给自己的。&lt;/p&gt;

&lt;p&gt;柏林：我不是做前端的，一直在关注大家。 &lt;/p&gt;

&lt;p&gt;呵呵。看到这句话蛮有感触，要体验过鸡汤的过程，才能品味到真实的味道。（说得不好哈）&lt;/p&gt;

&lt;p&gt;（完）文 / 玉伯&lt;/p&gt;

&lt;p&gt;PS：把这篇文章发出来，很犹豫。把这些想清楚的事情说出来，虽然可能会影响团队士气，会打击工作不久的前端，但隐瞒更不可取。 前端还很年轻，如何发展，如何前行，需要所有前端们一起来思考。我们需要未来，也需要真实。我们不需要的是混日子。我们往哪里去，取决于我们自己。&lt;/p&gt;

&lt;p&gt;原文地址：&lt;a href=&quot;http://www.chengxuyuans.com/program_life/67632.html&quot;&gt;http://www.chengxuyuans.com/program_life/67632.html&lt;/a&gt;&lt;/p&gt;
</content>
   </entry>
   

</feed>
